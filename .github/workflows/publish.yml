name: Build and Publish macOS Electron App

permissions:
  contents: write
  actions: read

on:
  push:
    branches:
      - main

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Set up git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        env:
          VERSION: ${{ env.VERSION }}
          GH_TOKEN: ${{ secrets.SECRET_GITHUB_ACTION }}
        run: |
          TAG="v$VERSION"
          git tag $TAG
          git push origin $TAG

  build-and-publish:
    needs: auto-tag
    runs-on: macos-latest
    env:
      CSC_LINK: ${{ secrets.mac_certs }}
      CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Decode and import Apple certificate to keychain
        run: |
          echo "$CSC_LINK" | base64 --decode > mac_certs.p12
          security create-keychain -p "" build.keychain
          security import mac_certs.p12 -k ~/Library/Keychains/build.keychain -P "$CSC_KEY_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain
          
      - name: Build and publish Electron app (macOS)
        run: npm run build:mac -- --publish=always
